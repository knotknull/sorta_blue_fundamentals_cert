
Notes of Microsoft Azure Fundamentals Certification: AZ-900
===========================================================


##########################################################################
##  Introduction
##########################################################################


## Exam Topics
##

 - Cloud concepts
 - Azure Architecture
 - Compute
 - Netowrking
 - Storage
 - Database
 - Authentication / Authorization
 - Solutions on Azure
 - Security
 - Privacy, compliance and trust
 - Pricing
 - Support
 - What to expect on exam day

## Azure Portal
##
https://portal.azure.com


## Azure CLI
##

 - stable    : commands don't change
 - structure : cli commands structured logically
 - x platform: CLI works on windows, mac, linux
 - automation: simple to automate cli commands
 - logging   : keep tack of what was done

https://azure.microsoft.com/en-us/downloads/
 > click Tools
https://docs.microsoft.com/en-us/cli/azure/install-azure-cli


## Azure PowerShell
##

 - Cmdlet (Command-lets): script that performs a specific task
    ex. "New-AzVM"
 - Uses Azure Resource Manager (like CLI)
 - Install Powershell
https://docs.microsoft.com/en-us/powershell/azure/install-az-ps?view=azps-2.8.0


## Azure CloudShell
##
 - Azure CloudShell:  Azure Portal + Azure CLI + PowerShell
 - interactive, browser-based shell for manage resources
 - access from web, mobile app
 - bash or powershell environments
 - tools: interpreters, modules, tools and support for Node.js, .NET and Python
 - storage: dedicated storage persists between data sessions
 - file editor

https://docs.microsoft.com/en-us/azure/cloud-shell/overview



##########################################################################
##  Cloud Concepts
##########################################################################

## Language of Cloud Computing
##


High Availability:
  - hardware fails, replace instantly
  - clusters ensure HA

Fault Tolerance:
  - resilience
  - zero downtime: faults caused by Azure are mitigated by Azure

Disaster Recovery:
  - Plan to recover from catastrophic disaster
    - RTO: Recover Time  Objective
    - RPO: Recover Point Objective

--Time-->>
     ------------------X------------------------------------
              |      Outage               |
              |        |                  |
              |<------>|<---------------->|
last backup->>|  RPO   |       RTO        | <<--time to recover online

# Scalability
Scale Out:  Add more resources
Scale Up :  Bigger resources

# Elasticity
  - Ability to quickly expand or decrease computing resources
    (Not just VMs)  >> Elasticity enables scaling

# Agility
  - Ability to rapidly develop, test and deploy software that drives growth



## Language of Cloud Economics
##

# CapEx / OpEx

Capital Expenditure:  Money spent by business or org on acquiring or maintaining,
    fixed assets such as land, buildings and equipment

Operational Expenditure:  Ongoing cost for running a product, business or system
    on a day-to-day basis, including annual costs.


# Cloud Pricing Models
  - Hourly Pricing: VMs, App Services
  - Consumption: pay for resources used
          - per execution
          - per second
          - combination (exec x secs)

# Cloud Service Models
 - Infrastructure-as-a-service
 - Platform-as-a-service
 - Software-as-a-service

 - IaaS
   - Infrastructure == servers
   - Scaling is fast
   - VMs & Servers, Networks, Physical Buildings

 - PaaS
   - Iaas + Middlware, Tools, DBs, etc.
   - Supports web app life cycle
   - Avoids software licenses

 - SaaS
   - Iaas + PaaS + Applicatons
   - Provide a managed service / pay access fee
   - no maintenance ex. Office365

 - Serverless
   - no servers to manage
   - ex. Azure Functions

# Azure Marketplace
 - Solutions and services: Apps, VMs, services, etc.
 - Azure App Store
 - Use from: Portal, CLI, PowerShell
 - Can publish own service via Marketplace

# Cloud Architecture Models
 - Private Cloud: Services offered to certain users
   Pros:
      - Complete control of Infrastructure
      - Benefits of public cloud
      - Better security and privacy
   Cons:
      - Maintenance / Staffing

 - Public Cloud: AWS, Azure, GCP, etc.
   Pros:
      - No hardware purchase
      - low monthly fees
   Cons:
      - No control over features and versions
      - No physical access

 - Hybrid Cloud: Private + Public Cloude
   Pros:
      - Avoid disruptions and outages
      - Adhere to regulation, governance
      - Span both public / private clouds
      - Alleviate CapEx investments
      - Allow fast scaling

   Cons:
      - Complex Infrastructure


##########################################################################
##  Azure Architecture
##########################################################################

## Regions and Availability Zones
##

# Region
  - A region is a set of data centers deployed within a latency-defined
    perimeter and connected through a dedicated regional low-latency network.

      - Region has more than one data center
      - Regional low-latency network:  fiber connection between data centers

  - Chosing a region:
      - Choose a region closest to your users
      - Some features aren't in all regions.
      - Price varies by region

# Paired Region
  - Paired within same geographic area (except Brazil South)
        East US paired w/ West US
        Australia East paired w/ Australia Southeast
        NOTE: Brazil South paired w/ South Central US

  - Outage Fail-over:
      - If primary region has an outage you can fail-over to secondary region

  - Planned Updates:
      - Serializes platform updates, only one region is updated at one time

  - Replication
      - Some services use paired regions for replication

# Availability Zones
  - Unique physical locations within a region (1 or more data centers)
  - Each zone has its own power, cooling and networking
  - Each region has a minimum of three zones.

  +----------------------------------+
  | Region                           |
  |                                  |
  |  [Availability]   [Availability] |
  |  [   Zone 1   ]   [    Zone 2  ] |
  |                                  |
  |          [Availability]          |
  |          [   Zone 3   ]          |
  |                                  |
  +----------------------------------+


## Resource Groups and
## Azure Resource Manager
##

# Resource Group
  - All resources are within a resource group
  - Resource Groups are NOT a resource !!
      - they are a container for resources

  - Each resource can ONLY EXIST in a single Resource Group
  - Add / remove resources to any resource group at any time
  - Can move a resource from one resource group to another
  - Resources from multiple regions can be in one resource group
  - Can be used as Access Control
      - Can give users access to a resource group and everything in it

  - Resources can interact with other resources from different resource groups
  - Resource group has location or region because it
    stores meta data about resources within it

# Azure Resource Manager
 - deployment and management services for Azure
 - creates, updates, deletes all resources
 - all interaction w. Azure Resources go thru Azure Resource Manager
    (Portal, SDK, PowerShell, CloudShell, Rest)

    Benefits:
      - Can deploy, manage, monitor resources as a group
      - Consistent deployment no matter which tool
      - Define dependencies between resources
      - Assign access rights to resources via ARM
      - Tag resources / use for billing


##########################################################################
##  Compute
##########################################################################

## Virtual Machine
##

# Features
  - machine you have exclusive access to
  - VM part of IaaS / don't own or control hardware
  - Tools: use Azure Portal to manage VMs and hybrid clouds
  - Compliance: Azure blueprints to make VMs comply w/ guidelines
  - Recommendations: Azure will recommend improvements
  - Win / Linux

# Pricing
  - Calculated Hourly
  - dependent on CPU / RAM / GPU

Pros:
  - Need to control all aspects of machine (except hardware)
  - Install specific apps on win / linux machines
  - Can move existing VM from on-premise / cloud provider to Azure
Cons:
  - Not for everything. Worth using Azure service instead
  - Maintenance: OS updates, patches, security, etc.


## Scale Sets
##
  Scale Sets:  create and manage group of identical, load balanced VMs

  - provide baseline VM and create clones
  - Multiple identical VMs
  - High Availability
  - Auto Scaling: automatically match demand by adding/removing VMs from scale set
                  based on resource usage increase / decrease
  - Large Scale:  Run up to 1000 VMs in a single scale set.
  - No extra cost


## App Services
##
  App Services == PaaS part of Azure Compute
  Fully managed platform (Servers, Network, Storage, etc.) managed by Azure
  3 Categories:
  Web Apps: websites and online apps
      - Runs on Windows and Linux
      - Languages:  .Net, Java, Node.js, PHP, Python, Ruby
      - Azure integration for easier deployment
      - Auto-scaling and load balancing

  Web Apps for containers: deploy / run containerized apps in Azure
      - Container = self-contained application
      - All dependencies are shipped inside the container
      - Deploy anywhere with a consistent experience

  API Apps: expose and connect data backend
      - Range of programming languages
      - Range of ways to secure

NOTE:  AppService (app) resides in AppServicePlan (host)

## Azure Container Instances
##
  - Manage Dependencies
  - Less overhead than VMs
  - Increased portability, deploy to various OS / HW
  - Efficient: scaling / patching simpler
  - Consistency: operation teams rely on container sameness

 Workflow:

 [SDLC]  -->> [App in Container] -->>  [Azure Container Instances]

  Azure Container Instances:
    - Azure service for running container workloads
    - On demand, run container without managing VM
    - Works w/ Portal, CLI, PowerShell


## Azure Kubernetes Service (AKS)
##

  - Replicate Container Architectures
      - reuse container arch using kubernetes

  - Standard Azure Services Included
      - don't have to worry about infrastructure
      - elastic provisioning, IAM

  - Global Reach
      - Use Kubernetes w/ supported Azure Regions and on-prem Azure Stack


## Azure Container Registry (ACR)
##
  - Service keeps track of current container images
  - Manages files and artifacts for containers
  - Feeds container images to ACI and AKS
  - Use Azure Identity and security features



                                    +----------------------------------+
                                    |  Azure Container Registry (ACR)  |
+-----------------------------------+----------------------------------+-------------------------------+
|  AKS Cluster                                                                                         |
|                                                                                                      |
|    +-------------------------+   +-------------------------+           +--------------------------+  |
|    |                   Pod   |   |                   Pod   |           |                          |  |
|    |                         |   |                         |           |                          |  |
|    |                         |   |                         |           |                          |  |
|    |   +----------------+    |   |   +-----------------+   |           |   +-------------------+  |  |
|    |   |                |    |   |   |                 |   |           |   |                   |  |  |
|    |   |      App       |    |   |   |      App        |   |           |   |      App          |  |  |
|    |   |   Container    |    |   |   |   Container     |   |           |   |   Container       |  |  |
|    |   |                |    |   |   |                 |   |           |   |                   |  |  |
|    |   +----------------+    |   |   +-----------------+   |           |   +-------------------+  |  |
|    |                         |   |                         |           |                          |  |
|    |                         |   |                         |           |                          |  |
|    |   +----------------+    |   |   +-----------------+   |           |   +-------------------+  |  |
|    |   |                |    |   |   |                 |   |           |   |                   |  |  |
|    |   |      App       |    |   |   |      App        |   |           |   |      App          |  |  |
|    |   |   Container    |    |   |   |   Container     |   |           |   |   Container       |  |  |
|    |   |                |    |   |   |                 |   |           |   |                   |  |  |
|    |   +----------------+    |   |   +-----------------+   |           |   +-------------------+  |  |
|    |                         |   |                         |           |                          |  |
|    +-------------------------+   +-------------------------+           +--------------------------+  |
|                                                                                                      |
|    +-------------------------------------------------------+           +--------------------------+  |
|    |                         Node                          |           |          Node            |  |
|    +-------------------------------------------------------+           +--------------------------+  |
+------------------------------------------------------------------------------------------------------+


## Functions
##
  - Smallest (and larges ?) compute service on Azure
  - A single function of compute
  - Called, or invoked via a standard web address (URL)
  - Runs once and stops

  Architecture:
    - Runs on VM
    - No maintenance / processes / Nothing VM related
    - Only focus on functionality

  Benefits:
    - Only runs when needed
      - no traffic = no resource usage
    - Saves money
      - don't pay for functionality when not used
    - Resilience
      - function failing doesn't affect other function instances


##########################################################################
##  Networking
##########################################################################

## Virtual Network <***>
##

  - No physical network, network is abstracted


# Address Space:  Range if IP addresses available
                  192.168.0.1 - 192.168.0.252

  - Address space assigned to VNet
  - Every device assigned to VNet gets IP Addr within Address Space

# Subnet:  Segment VNet
          Split Address Space among Subnets

    VNet_1   =    192.168.0.001 - 192.168.0.252
      Subnet_1 =  192.168.0.001 - 192.168.0.016
      Subnet_2 =  192.168.0.017 - 192.168.0.032
      Subnet_3 =  192.168.0.033 - 192.168.0.252

  - Resource Grouping : group resources on same subnet
  - Address Allocation: more efficient to allocate addresses on smaller subnet
  - Subnet Security   : Use network security group to secure individual subnets

# Subnet Regions and Subscriptions
  - VNet belongs to a single region
      NOTE: Every resource on VNet must be in same region too
            Can connect VNets across regions

  - VNet belongs to just one subscription
      Subscription can have multiple VNets

# Advantages
  - Scaling:
        can add more VNets or more addresses to VNets
  - HA:
        Peering VNets, Load Balancer, VPN Gateway all increase availability
  - Isolation:
        Manage / organize resources with subnets and network security groups


## Load Balancer
##
  Load Balancer: distributes new inbound flows that arrive on Load Balancer to
           backend pool instances, according to rules and health probes
           health probe checks to ensure back end instance can receive data
Usage:

             really-angry-llama.com
                       |
        +----------------------------+
        |       Load Balancer        |
        +----------------------------+
                       |
        +----------------------------+
        |              |             |
   +---------+    +---------+    +---------+
   |   VM    |    |   VM    |    |   VM    |
   +---------+    +---------+    +---------+

# Scenarios
 - Balance incoming Internet Traffic
 - Internal Networks
 - Port Forwarding (traffic forwarded to specific machine)
 - Outbound Traffic:  allow outbound connectivity to VMs


## VPN Gateway
##

Virtual Network Gateway: 2 or more VMs deployed to Gateway Subnet
    - VMs in Gatway Subnet are created when Virtual Network Gateway is created


VPN Gateway: Specific type of Virtual Network Gateway
        Sends encrypted traffic from Azure VNet and On-Prem Network over Public Internet



  +----------------------------+                +----------------------------+
  | Azure VNet                 |                | On Premise                 |
  |              +-------------+  Encrypted     +----------------+           |
  |              | VPN Gateway | <------------->| Encrypted      |           |
  |              | (Public IP) |   Tunnel       |Traffic Gateway |           |
  |              +-------------+                +----------------+           |
  |                            |                |                            |
  +----------------------------+                +----------------------------+                            |


## Application Gateway
##
Aplication Gateway: higher level Load Balancer

Route traffic by URI or Host Header information

               HTTP Request  (URI / Host header)
                            |
             +----------------------------+
             |    Application Gateway     |
             +----------------------------+
                            |
        +--------------------------------------+
        |                   |                  |
   +---------+         +---------+         +---------+
   |   VM    |         |   VM    |         |   VM    |
   +---------+         +---------+         +---------+
 http://..videos..    http://..search..     http://..images..

Benefits:
  - App Gateway can scale up or down based on amount of traffic
  - Encryption:  Comply w/ security policies.  Disable / enable
                    encrypted traffic to backend
  - Zone Redundancy   : Span multiple availability zones / improve fault resiliency
  - Multi-site hosting:  Use same application gateway for up to 100 websites


## Content Delivery Network
##

Content Delivery Network (CDN): distributed network of servers that deliver
  web content close to users.

Benefits:
  - Better Performance
  - Scaling
  - Distribution of user requests, less traffic at origin server (master copy)


##########################################################################
##  Storage
##########################################################################

##  Overview
##

Storage Account: Unique Azure Namespace for data
        - Every object in Azure has its own web address

Storage web address format:
  <storage_acct>.<storage_type>.core.windows.net
eg.
  mapstoreacct.blob.core.windows.net


##  BLOB
##
BLOB: Binary Large Object
   - 3 levels to BLOB storage


    +---------------------------------+
    |  Storage Account                |
    |                                 |
    |   +-------------------------+   |
    |   | Container               |   |
    |   |  +--------+  +--------+ |   |
    |   |  | BLOB 1 |  | BLOB 2 | |   |
    |   |  +--------+  +--------+ |   |
    |   |                         |   |
    |   |        +--------+       |   |
    |   |        | BLOB 3 |       |   |
    |   |        +--------+       |   |
    |   +-------------------------+   |
    |                                 |
    +---------------------------------+

NOTE:  Can stream audio / video from BLOB storage
       Write log files regardless size / frequency
       Any kind of data: DR, backup, archive etc.

# BLOB Types
  - Block: store text / binary data upto *** 4.7TB
           Made up of individually managed blocks of data (?)

  - Append: Block BLOB that are optimized for append operations.
           Works well for logging.

  - Page: Store files up to 8TB. Any part of the file could be accessed at
          any time, e.g. Virtual Hard Drive

# Pricing Tiers
  - Hot    : Frequently accessed files, lower access times, higher costs
  - Cool   : Lower storage costs, higher access times. Data remains for
               at least 30 days
  - Archive: Lowest costs, highest access times


##  Disk
##

# Managed Disk:
   - Attach to VMs
   - Azure manages, dont worry about backup, uptime
   - Azure guarantees size / performance
   - Upgrade disk size and type


# Disk Types:
   - HDD: spinning hard drive, low cost. Best for backups

   - Standard SSD: Standard for Production. Higher reliability, scalability,
                    lower latency over HDD

   - Premium SSD : Fast, high performance. Very low latency.
                    Use for critical workloads. (DBs)

   - Ultra Disk  : Most demanding, data intensive workloads.
                    Disks up to 64TB. (Heavy transaction, complex analytics,
                    gaming, rendering and low queue depth databases)


##  File
##

# File Storage Account:
  Benefits:
    - Share access to Azure file storage across machines and provide access
         to on-prem infrastructure.

    - Managed: dont have to worry about HW / OS

    - Resilient: Network and power outages won't affect your storage
         redundancies built in.

# Scenarios
  - Hybrid: supplement / replace on-prem storage
  - Lift and Shift: Move existing file storage and related services, to Azure


##  Archive
##

  - requirements: compliance, policies
  - lowest price, few dollars/ month gets per TBs of space
  - features: durable, encrypted, stable. Perfect for infrequently used data
  - free up premium storage
  - fully secure
  - archive storage == blob storage


##########################################################################
##  Databases
##########################################################################


##  Cosmos DB
##

 - Global DB

 - Synchronization:  Easy to expand to more regions and have data stay
                     in sync (one click)
      - Synchronization handled by Cosmos

 - Latency: single digit latency (0-9ms) anywhere in the world (?)

 - Scalability:
      - Automated: Can automate scaling dependent on resource demand
      - Infinite : Any number of users of application can be supported (?????)
      - Lowest Price: only pay for resources used

 - Connectivity:
      - Developer: Choose from SDKs and APIs
      - Languages: C#, Java, Node.js
      - Platforms: Can integrate with SQL, MongoDB, Cassandra

NOTE:  Can be expensive!!!!


##  Azure SQL
##

 - Managed SQL Server

                     +-----------+
                     |           |
                     |    SQL    |
                     |           |
                     +-----------+
                           ^
                           |
                           v
  +-------------------------------------------------------+
  |                     A Z U R E                         |
  +-------------------------------------------------------+
                ^                           ^
                |                           |
                v                           v
    +-------------------------+    +-------------------------+
    |        Hardware         |    |         IaaS            |
    +-------------------------+    +-------------------------+

 - Can migrate On-prem SQL Server to AzureSQL directly
      - frictionless
      - cost savings
      - Lower TCO

 - Built-in Machine Learning
    - Optimization: suggestion on how to optimize performances
         of Azure SQL instances
    - Warnings;  will warn if instances are degrading, etc.

 - Scalability:  Scale Azure SQL instances and get HA
 - Size    :  Manage up to 100TB
 - Security:  Benefit from built-in security features of Azure cloud platform

##  Azure DB for MySQL
##
MySQL Open Source DB

Azure DB for MySQL == PaaS
   - Focus on dev not infrastructure
   - choice of language / framework
      - PHP / WordPress

   - HA
   - Azure Security Features
   - Cloud PaaS Features:
      - patching, backups, monitoring, included

##  Azure DB for PostgreSQL
##

Open Source DB
  - Extensions: JSONB, geospatial functions, indexing, integration w/ tools
  - Horizontal Scaling: Very performance access to distributed data sets
              across 100s of servers
  - Performance Recommendations: get recommendations based on usage
          get notifications of disruptive events.
   - Cloud PaaS Features / fully managed:
      - patching, backups, monitoring, included


##  Database Migration Services
##

https://datamigration.microsoft.com/

Dedicated tool to migrate from on-prem to cloud.
  - single tool
  - Documentations: Comprehensive step-by-step guides
  - Guides to migrate non MSFT DBs to Azure SQL (managed)
      or Azure SQL Server (non-managed)


##########################################################################
##  Authentication & Authorization
##########################################################################


##  Identity Services
##

Authentication: Confirm user is the user
                confirm identity
                first test of access

Authorization : Provide access to resources
                comes after authentication
                do you get access
                granular control

# Access Management
  - Auth / Auth
  - Keep out unauthorized



##  Azure Active Directory
##

# Active Directory
  - traditional office use
  - AD not designed for web
  - AD authentication uses services that aren't available on Azure

# Azure Active Directory
  - AD IS NOT AAD
  - AAD is a service

  NOTE: You can't have an Azure account without and AAD service.

  - Every Azure account needs a first user (owner) and this user is
    in the initial AAD instance

# Tenant:   Tenant == AAD instance

  - tenant represents an organization within Azure
  - A tenant is a dedicated instance of AAD that an organization
    receives when signing up for Azure
        - first thing created in an Azure Account
  - One user - One Tenant
        - each user an only belong to single tenant
        - BUT users can be guests of other tenants

  NOTE: Each tenants is distinct and separate from other AAD tenants


# Subscription
  - Billing Entity
      - all resources within a subscription are billed together

  - Cost separation
      - can have multiple subscriptions within a tenant (separate costs)

  - Payment stopped, services stopped

# Hybrid Cloud Architecture


    +--------------+      +--------+      +----------+
    |  On-Premise  | ===> |  AAD   | ===> |  Azure   |
    +--------------+      +--------+      +----------+


##  Mult-Factor Authentication
##
- Built into Azure Active Directory
- At least 2 ways of authentication:
    - Something you know
    - Something you have (app, fob)
    - Something you are  (biometrics)

email addr / password  --------->> SMS Text to Mobile number
(something you know)                  (something you have)



##########################################################################
##  Azure Solutions
##########################################################################


##  Internet of Things
##

#  IoT Hub: Backend for IoT  Devices
  - Managed and secure
  - Ease of Deployment
  - Platform-as-a-Service (PaaS)
  - Scaling and Authentication


#  IoT Central
  - Software as a Service (SaaS)
  - No coding needed
      - receives feeds from devices and focus on metrics / business value
  - Pre-made Connectors
      - 100s of connectors in IoT Central


##  Big Data
##

#  Data Lake Analytics
  - Large amounts of data
  - Parallel processing of data
  - Servers, processes and other services ready to go

#  HDInsights
  - Similar to Azure Data Lake Analytics
  - Open Source
  - Includes Apache Hadoop, Spark and Kafka

# Databricks
  - Based on Spark, distributed cluster-computing framework
  - Run and process a dataset on many computers simultaneously
  - Databricks (Azure) provides all the computing power
  - Integrates with other Azure Storage services

# Azure Synapse Analytics
  - Azure's data warehouse offering
  - Used to be Azure SQL Data Warehouse
  - Used for reporting and data analysis
  - Use Synapse SQL language

- Speed
- Cost Reduction
- Better Decision Making
- New Product and Services


##  Artificial Intelligence
##
 - Machines imitate intelligent human behavior

# Machine Learning / AI
   - Models: definition of what ML app is learning.
             Set of rules of how to use data provided
             Model finds patterns based on rules

   - Knowledge Mining:
      - Use Azure Search to find existing insights in data
      - File relationships, geographic connections, etc.

   - Built-in Apps:
      - A number of built-in apps that you can use for ML/AI
      - i.e. cognitive services / bot services


# Azure Cognitive Services
   - Vision
      - use vision service to recognize, identify and caption videos / images

   - Decision
      - make decisions based on content
          - detect offensive language
          - detect IoT anomalies

   - Speech
      - Automatic speech-to-text transcription.
          - speaker identification
          - speaker verification


# Azure Machine Learning Studio
   - Visual tool to manage ML needs
   - Supports all Azure ML Tools
   - Pre-made modules
   - Use for real-world scenarios:
      - twitter sentiment analysis
      - photo grouping
      - movie recommendations


# Machine Learning Service
   - End-to-End Service
      - Service to use AI/ML on Azure
   - Tooling
      - Collection of tools to help build AI apps
   - Automation
      - Azure automatically recognizes trends in your apps and
        creates models for you.


##  Serverless
##
   - Not managing servers
      - extreme version of PaaS

# Azure Functions
   - First serverless services on Auzre
   - Single task performed, runs once per invocation
   - Basic Compute Unit

# Logic Apps
   - Connect systems inside and outside of Azure platform
      - Integrate apps, data flows, services and systems
   - Automation
      - Schedule, automate and orchestrate tasks and processes
   - No coding skills needed
      - Access to apps and integrate

# Event Grid
   - Network of connections across Azure services
   - Routing service for sending / receiving events between apps
   - Serverless / no infrastructure to manage / sign up for service
   - Simplifies complex cloud architecture

NOTE: Serverless approaches work extremely well with cloud services.
      (ACloud.guru is all serverless)


##  DevOps
##
  Azure Boards   :  Keep track of tasks, timelines, issues, planning
  Azure Pipelines:  Produce and test software automatically / continuously
  Azure Repos    :  Store source code
  Azure Test Plans: Design tests of applications, implement automatically
  Azure Artifacts:  Share app code and code libraries w/ other teams

# Azure DevTest Labs
  - Environment Management: create test / dev environments
  - Cost Management: minimize resource waste
  - Templates: reuse template deployments










##########################################################################
##
##########################################################################









[.]
